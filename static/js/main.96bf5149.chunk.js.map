{"version":3,"sources":["components/AddTask.tsx","components/Button.tsx","components/Header.tsx","components/Footer.tsx","components/Task.tsx","components/Tasks.tsx","components/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddTask","props","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","onAdd","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","style","backgroundColor","color","onClick","Header","location","useLocation","pathname","showAdd","Footer","href","to","Task","task","onDoubleClick","onToggle","id","cursor","Tasks","tasks","map","onDelete","About","App","showAddTask","setShowAddTask","setTasks","addTask","length","newTask","deleteTask","filter","toggleReminder","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96bf5149.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddTask = (props: AddTaskProps) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e:React.FormEvent) => {\n        e.preventDefault();\n\n        if (!text) {\n            alert('Please add a task');\n            return;\n        }\n\n        props.onAdd({text, day, reminder});\n\n        // Clear form\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n        <form className={'add-form'} onSubmit={onSubmit}>\n            <div className={'form-control'}>\n                <label>Task</label>\n                <input \n                    type={'text'} \n                    placeholder={'Add Task'} \n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div className={'form-control'}>\n                <label>Day and Time</label>\n                <input \n                    type={'text'} \n                    placeholder={'Add Day and Time'} \n                    value={day}\n                    onChange={(e) => setDay(e.target.value)}\n                />\n            </div>\n            <div className={'form-control form-control-check'}>\n                <label>Set Reminder</label>\n                <input \n                    type={'checkbox'} \n                    checked={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n            <input \n                type={'submit'} \n                value={'Save Task'}\n                className={'btn btn-block'}\n            />\n        </form>\n    )\n}\n\nexport default AddTask;","const Button = (props: ButtonProps) => {\n    return (\n        <button \n        className=\"btn\"\n        style={{backgroundColor: props.color}}\n        onClick={props.onClick}>\n            {props.text}\n        </button>\n    )\n}\n\nexport default Button\n","import { useLocation } from 'react-router-dom';\nimport Button from \"./Button\"\n\nconst Header = (props: HeaderProps) => {\n    const location = useLocation();\n    return (\n        <header className=\"header\">\n            <h1>{'Task Tracker'}</h1>\n            {location.pathname === '/' &&\n            <Button \n                color={props.showAdd ? 'red' : 'green'}\n                text={props.showAdd ? 'Close' : 'Add'} \n                onClick={props.onAdd}\n            />}\n        </header>\n    )\n}\n\nexport default Header\n","import { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>\n            Created by <a href={'https://github.com/BenWarwick-Champion'}>Ben Warwick-Champion</a>\n            </p>\n            <Link to={'/about'}>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer;\n","import {FaTimes} from 'react-icons/fa';\n\nconst Task = (props: TaskProps) => {\n    return (\n        <div \n        className={props.task.reminder ? 'task reminder' : 'task'}\n        onDoubleClick={() => props.onToggle(props.task.id)}>\n            <h3>\n                {props.task.text}\n                <FaTimes\n                style={{color: 'red', cursor: 'pointer'}}\n                onClick={() => props.onClick(props.task.id)}\n                />\n            </h3>\n            <p>{props.task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\";\n\nconst Tasks = (props: TasksProps) => {\n    return (\n        <>\n          {props.tasks.map((task) => (\n              <Task \n                key={task.id} \n                task={task} \n                onClick={props.onDelete}\n                onToggle={props.onToggle}\n              />\n          ))}\n        </>\n    )\n}\n\nexport default Tasks;\n","import { Link } from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to={'/'}>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About;\n","import { useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport AddTask from './components/AddTask';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport About from './components/About';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState<boolean>(false);\n  const [tasks, setTasks] = useState<Array<Task>>([\n    {\n        id: 0,\n        text: 'Meeting at school',\n        day: 'April 1st at 13:00',\n        reminder: true,\n    },\n    {\n        id: 1,\n        text: 'Work meeting',\n        day: 'April 2nd at 14:00',\n        reminder: false,\n    },\n    {\n        id: 2,\n        text: 'Food shopping',\n        day: 'April 3rd at 15:00',\n        reminder: true,\n    }\n  ]);\n\n\n  // Add Task\n  const addTask = (task: NewTask) => {\n    const id = tasks.length;\n    const newTask: Task = {id: id, ...task};\n    setTasks([...tasks, newTask]);\n  }\n\n  // Delete Task\n  const deleteTask = (id: number) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id: number) => {\n    setTasks(tasks.map((task: Task) => task.id === id\n    ? {...task, reminder: !task.reminder } : task))\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Header \n          showAdd={showAddTask}\n          onAdd={() => setShowAddTask(!showAddTask)} \n        />\n        <Route path={'/'} exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 \n            ? <Tasks \n            tasks={tasks} \n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          /> \n        : 'No tasks to show - Create some tasks!'}\n          </>\n        )} />\n        <Route path={'/about'} component={About} />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}